<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.FirefoxDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.FirefoxDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.FirefoxDriverConfig" testname="jp@gc - Firefox Driver Config" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">false</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">true</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <boolProp name="FirefoxDriverConfig.general.useragent.override.enabled">false</boolProp>
          <boolProp name="FirefoxDriverConfig.network.negotiate-auth.allow-insecure-ntlm-v1">false</boolProp>
          <collectionProp name="FirefoxDriverConfig.general.extensions"/>
          <collectionProp name="FirefoxDriverConfig.general.preferences"/>
        </com.googlecode.jmeter.plugins.webdriver.config.FirefoxDriverConfig>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Scenario: authentication " enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui.WebDriverWait); //WebDriver classes
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables(); //Get Jmeter Vars

WDS.sampleResult.sampleStart()
WDS.browser.get(&apos;https://qa-challenge.ensolvers.com &apos;)
WDS.log.info(&quot;Start test&quot;);
//Enter Name
var searchField = WDS.browser.findElement(pkg.By.id(&apos;username&apos;)); //saves search field into searchField
searchField.click(); //clicks search field
searchField.sendKeys([&apos;user&apos;]); //types user
WDS.log.info(&quot;USER&quot;);
//Enter Password
var searchField = WDS.browser.findElement(pkg.By.id(&apos;password&apos;)); //saves search field into searchField
searchField.click(); //clicks search field
searchField.sendKeys([&apos;user&apos;]); //types password
WDS.log.info(&quot;PASSWORD&quot;);

var searchField = WDS.browser.findElement(pkg.By.cssSelector(&apos;.btn-primary&apos;)); //saves search field into searchField
searchField.click(); //clicks search field
java.lang.Thread.sleep(5000);

var current = WDS.browser.getCurrentUrl();
WDS.log.info(current);
vars.put(&apos;current&apos;,current)
WDS.sampleResult.sampleEnd();
//WDS.browser.manage().deleteAllCookies()
//WDS.browser.close()</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">def current = vars.get(&quot;current&quot;)
def test_string = &quot;https://qa-challenge.ensolvers.com/&quot;
if (current != test_string){
	AssertionResult.setFailure(true);
	AssertionResult.setFailureMessage(&quot;FAILD&quot;)
}
else{
	log.info(&quot;GOOD&quot;);
}</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Scenario: open Folder Manager" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui.WebDriverWait); //WebDriver classes
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables(); //Get Jmeter Vars

WDS.sampleResult.sampleStart()
WDS.browser.get(&apos;https://qa-challenge.ensolvers.com &apos;)
WDS.log.info(&quot;Start test&quot;);
java.lang.Thread.sleep(4000);
//Enter Name

var searchField = WDS.browser.findElement(pkg.By.cssSelector(&apos;.col-md-6:nth-child(2) &gt; .mr-2&apos;)); //saves search field into searchField
searchField.click(); //clicks search field
java.lang.Thread.sleep(5000);

var current = WDS.browser.getCurrentUrl();
WDS.log.info(current);
vars.put(&apos;current&apos;,current)
WDS.sampleResult.sampleEnd();
//WDS.browser.manage().deleteAllCookies()
//WDS.browser.close()</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">def current = vars.get(&quot;current&quot;)
def test_string = &quot;https://qa-challenge.ensolvers.com/folder&quot;
if (current != test_string){
	AssertionResult.setFailure(true);
	AssertionResult.setFailureMessage(&quot;FAILD&quot;)
}
else{
	log.info(&quot;GOOD&quot;);
}</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Scenario: new Folder" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui.WebDriverWait); //WebDriver classes
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables(); //Get Jmeter Vars

WDS.sampleResult.sampleStart()
WDS.browser.get(&apos;https://qa-challenge.ensolvers.com &apos;)
WDS.log.info(&quot;Start test&quot;);
java.lang.Thread.sleep(4000);
//Enter Name

var searchField = WDS.browser.findElement(pkg.By.cssSelector(&apos;.col-md-6:nth-child(2) &gt; .mr-2&apos;)); //saves search field into searchField
searchField.click(); //clicks search field
java.lang.Thread.sleep(5000);

var searchField = WDS.browser.findElement(pkg.By.id(&apos;jh-create-entity&apos;)); //saves search field into searchField
searchField.click(); //clicks search field
java.lang.Thread.sleep(5000);

var current = WDS.browser.getCurrentUrl();
WDS.log.info(current);
vars.put(&apos;current&apos;,current)
WDS.sampleResult.sampleEnd();
//WDS.browser.manage().deleteAllCookies()
//WDS.browser.close()</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">def current = vars.get(&quot;current&quot;)
def test_string = &quot;https://qa-challenge.ensolvers.com/folder/new&quot;
if (current != test_string){
	AssertionResult.setFailure(true);
	AssertionResult.setFailureMessage(&quot;FAILD&quot;)
}
else{
	log.info(&quot;GOOD&quot;);
}</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Scenario: edit Folder " enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui.WebDriverWait); //WebDriver classes
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables(); //Get Jmeter Vars

WDS.sampleResult.sampleStart()
WDS.browser.get(&apos;https://qa-challenge.ensolvers.com &apos;)
WDS.log.info(&quot;Start test&quot;);
java.lang.Thread.sleep(4000);
//Enter Name

var searchField = WDS.browser.findElement(pkg.By.cssSelector(&apos;.col-md-6:nth-child(2) &gt; .mr-2&apos;)); //saves search field into searchField
searchField.click(); //clicks search field
java.lang.Thread.sleep(5000);

var searchField = WDS.browser.findElement(pkg.By.cssSelector(&apos;tr:nth-child(1) .btn-primary &gt; .svg-inline--fa&apos;)); //saves search field into searchField
searchField.click(); //clicks search field
java.lang.Thread.sleep(5000);

var current = WDS.browser.getCurrentUrl();
WDS.log.info(current);
vars.put(&apos;current&apos;,current)
WDS.sampleResult.sampleEnd();
//WDS.browser.manage().deleteAllCookies()
//WDS.browser.close()</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">def current = vars.get(&quot;current&quot;)
def test_string = &quot;https://qa-challenge.ensolvers.com/folder/15/edit&quot;
if (current != test_string){
	AssertionResult.setFailure(true);
	AssertionResult.setFailureMessage(&quot;FAILD&quot;)
}
else{
	log.info(&quot;GOOD&quot;);
}</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Scenario: open To-Do Items Manager" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui.WebDriverWait); //WebDriver classes
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables(); //Get Jmeter Vars

WDS.sampleResult.sampleStart()
WDS.browser.get(&apos;https://qa-challenge.ensolvers.com &apos;)
WDS.log.info(&quot;Start test&quot;);
java.lang.Thread.sleep(4000);
//Enter Name

var searchField = WDS.browser.findElement(pkg.By.cssSelector(&apos;.col-md-6:nth-child(1) &gt; .mr-2&apos;)); //saves search field into searchField
searchField.click(); //clicks search field
java.lang.Thread.sleep(5000);

var current = WDS.browser.getCurrentUrl();
WDS.log.info(current);
vars.put(&apos;current&apos;,current)
WDS.sampleResult.sampleEnd();
//WDS.browser.manage().deleteAllCookies()
//WDS.browser.close()</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">def current = vars.get(&quot;current&quot;)
def test_string = &quot;https://qa-challenge.ensolvers.com/to-do-item?page=1&amp;sort=id,asc&quot;
if (current != test_string){
	AssertionResult.setFailure(true);
	AssertionResult.setFailureMessage(&quot;FAILD&quot;)
}
else{
	log.info(&quot;GOOD&quot;);
}</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Scenario: new To-Do Items" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui.WebDriverWait); //WebDriver classes
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables(); //Get Jmeter Vars

WDS.sampleResult.sampleStart()
WDS.browser.get(&apos;https://qa-challenge.ensolvers.com &apos;)
WDS.log.info(&quot;Start test&quot;);
java.lang.Thread.sleep(4000);
//Enter Name

var searchField = WDS.browser.findElement(pkg.By.cssSelector(&apos;.col-md-6:nth-child(1) &gt; .mr-2&apos;)); //saves search field into searchField
searchField.click(); //clicks search field
java.lang.Thread.sleep(5000);

var searchField = WDS.browser.findElement(pkg.By.id(&apos;jh-create-entity&apos;)); //saves search field into searchField
searchField.click(); //clicks search field
java.lang.Thread.sleep(5000);

var current = WDS.browser.getCurrentUrl();
WDS.log.info(current);
vars.put(&apos;current&apos;,current)
WDS.sampleResult.sampleEnd();
//WDS.browser.manage().deleteAllCookies()
//WDS.browser.close()</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">def current = vars.get(&quot;current&quot;)
def test_string = &quot;https://qa-challenge.ensolvers.com/to-do-item/new&quot;
if (current != test_string){
	AssertionResult.setFailure(true);
	AssertionResult.setFailureMessage(&quot;FAILD&quot;)
}
else{
	log.info(&quot;GOOD&quot;);
}</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Scenario: edit To-Do Items " enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui.WebDriverWait); //WebDriver classes
var vars = org.apache.jmeter.threads.JMeterContextService.getContext().getVariables(); //Get Jmeter Vars

WDS.sampleResult.sampleStart()
WDS.browser.get(&apos;https://qa-challenge.ensolvers.com &apos;)
WDS.log.info(&quot;Start test&quot;);
java.lang.Thread.sleep(4000);
//Enter Name

var searchField = WDS.browser.findElement(pkg.By.cssSelector(&apos;.col-md-6:nth-child(1) &gt; .mr-2&apos;)); //saves search field into searchField
searchField.click(); //clicks search field
java.lang.Thread.sleep(5000);

var searchField = WDS.browser.findElement(pkg.By.cssSelector(&apos;tr:nth-child(1) .btn-primary &gt; .svg-inline--fa&apos;)); //saves search field into searchField
searchField.click(); //clicks search field
java.lang.Thread.sleep(5000);

var current = WDS.browser.getCurrentUrl();
WDS.log.info(current);
vars.put(&apos;current&apos;,current)
WDS.sampleResult.sampleEnd();
//WDS.browser.manage().deleteAllCookies()
//WDS.browser.close()</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">def current = vars.get(&quot;current&quot;)
def test_string = &quot;https://qa-challenge.ensolvers.com/to-do-item/45/edit?page=1&amp;sort=id,asc&quot;
if (current != test_string){
	AssertionResult.setFailure(true);
	AssertionResult.setFailureMessage(&quot;FAILD&quot;)
}
else{
	log.info(&quot;GOOD&quot;);
}</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
